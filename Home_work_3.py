#1 - Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.

#*Пример:*

#- [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
def number_odd_position(array):
    sum = 0
    for i in range(1, len(array), 2):
       sum += array[i]
    return sum
list_nums = [2, 3, 5, 9, 3]
print("Cумма чисел стоящих на нечетных поцициях равна: ", number_odd_position(list_nums))


#2 - Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.

#*Пример:*

#- [2, 3, 4, 5, 6] => [12, 15, 16];
#- [2, 3, 5, 6] => [12, 15]
def sum_party(array):
    finish_list = []
    first_ind = 0
    last_ind = len(array) - 1
    while last_ind - first_ind >=0:
        finish_list.append(array[first_ind] * array[last_ind])
        first_ind += 1
        last_ind -= 1
    return finish_list
array_1 = [2, 3, 4, 5, 6]
print("Произведение пар чисел списка: ", sum_party(array_1))

#3 - Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

#*Пример:*

#- [1.1, 1.2, 3.1, 5.567, 10.003] => 0.564 или 564

None

# 4 - Напишите программу, которая будет преобразовывать десятичное число в двоичное.
#
# *Пример:*
#
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

dec_num = int(input("Введите десятичное число: "))
bin_num = ""
while dec_num > 0:
    bin_num = str(dec_num % 2) + bin_num
    dec_num = dec_num // 2
print("Число в двоичной системе: ", bin_num)

#5 - Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

#*Пример:*

#- для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи](https://clck.ru/sH87m)

fib1 = 1
fib2 = 1

n = input("Номер элемента ряда Фибоначчи: ")
n = int(n)

i = 0
while i < n - 2:
    fib_sum = fib1 + fib2
    fib1 = fib2
    fib2 = fib_sum
    i = i + 1

print("Значение этого элемента:", fib2)